<?php
// This file was auto-generated from sdk-root/src/data/mediapackage/2017-10-12/docs-2.json
return [ 'version' => '2.0', 'service' => 'AWS Elemental MediaPackage', 'operations' => [ 'CreateChannel' => 'Creates a new Channel.', 'CreateOriginEndpoint' => 'Creates a new OriginEndpoint record.', 'DeleteChannel' => 'Deletes an existing Channel.', 'DeleteOriginEndpoint' => 'Deletes an existing OriginEndpoint.', 'DescribeChannel' => 'Gets details about a Channel.', 'DescribeOriginEndpoint' => 'Gets details about an existing OriginEndpoint.', 'ListChannels' => 'Returns a collection of Channels.', 'ListOriginEndpoints' => 'Returns a collection of OriginEndpoint records.', 'RotateChannelCredentials' => 'Changes the Channel ingest username and password.', 'UpdateChannel' => 'Updates an existing Channel.', 'UpdateOriginEndpoint' => 'Updates an existing OriginEndpoint.', ], 'shapes' => [ 'AdMarkers' => [ 'base' => NULL, 'refs' => [ 'HlsPackage$AdMarkers' => 'This setting controls how ad markers are included in the packaged OriginEndpoint."NONE" will omit all SCTE-35 ad markers from the output."PASSTHROUGH" causes the manifest to contain a copy of the SCTE-35 admarkers (comments) taken directly from the input HTTP Live Streaming (HLS) manifest."SCTE35_ENHANCED" generates ad markers and blackout tags based on SCTE-35messages in the input source.', ], ], 'Channel' => [ 'base' => 'A Channel resource configuration.', 'refs' => [ 'ListOfChannel$member' => NULL, ], ], 'ChannelCreateParameters' => [ 'base' => 'Configuration parameters for a new Channel.', 'refs' => [], ], 'ChannelList' => [ 'base' => 'A collection of Channel records.', 'refs' => [], ], 'ChannelUpdateParameters' => [ 'base' => 'Configuration parameters for updating an existing Channel.', 'refs' => [], ], 'DashEncryption' => [ 'base' => 'A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.', 'refs' => [ 'DashPackage$Encryption' => NULL, ], ], 'DashPackage' => [ 'base' => 'A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.', 'refs' => [ 'OriginEndpoint$DashPackage' => NULL, 'OriginEndpointCreateParameters$DashPackage' => NULL, 'OriginEndpointUpdateParameters$DashPackage' => NULL, ], ], 'EncryptionMethod' => [ 'base' => NULL, 'refs' => [ 'HlsEncryption$EncryptionMethod' => 'The encryption method to use.', ], ], 'HlsEncryption' => [ 'base' => 'An HTTP Live Streaming (HLS) encryption configuration.', 'refs' => [ 'HlsPackage$Encryption' => NULL, ], ], 'HlsIngest' => [ 'base' => 'An HTTP Live Streaming (HLS) ingest resource configuration.', 'refs' => [ 'Channel$HlsIngest' => NULL, ], ], 'HlsPackage' => [ 'base' => 'An HTTP Live Streaming (HLS) packaging configuration.', 'refs' => [ 'OriginEndpoint$HlsPackage' => NULL, 'OriginEndpointCreateParameters$HlsPackage' => NULL, 'OriginEndpointUpdateParameters$HlsPackage' => NULL, ], ], 'IngestEndpoint' => [ 'base' => 'An endpoint for ingesting source content for a Channel.', 'refs' => [ 'ListOfIngestEndpoint$member' => NULL, ], ], 'ListOfChannel' => [ 'base' => NULL, 'refs' => [ 'ChannelList$Channels' => 'A list of Channel records.', ], ], 'ListOfIngestEndpoint' => [ 'base' => NULL, 'refs' => [ 'HlsIngest$IngestEndpoints' => 'A list of endpoints to which the source stream should be sent.', ], ], 'ListOfOriginEndpoint' => [ 'base' => NULL, 'refs' => [ 'OriginEndpointList$OriginEndpoints' => 'A list of OriginEndpoint records.', ], ], 'ListOf__string' => [ 'base' => NULL, 'refs' => [ 'OriginEndpoint$Whitelist' => 'A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.', 'OriginEndpointCreateParameters$Whitelist' => 'A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.', 'OriginEndpointUpdateParameters$Whitelist' => 'A list of source IP CIDR blocks that will be allowed to access the OriginEndpoint.', 'SpekeKeyProvider$SystemIds' => 'The system IDs to include in key requests.', ], ], 'MssEncryption' => [ 'base' => 'A Microsoft Smooth Streaming (MSS) encryption configuration.', 'refs' => [ 'MssPackage$Encryption' => NULL, ], ], 'MssPackage' => [ 'base' => 'A Microsoft Smooth Streaming (MSS) packaging configuration.', 'refs' => [ 'OriginEndpoint$MssPackage' => NULL, 'OriginEndpointCreateParameters$MssPackage' => NULL, 'OriginEndpointUpdateParameters$MssPackage' => NULL, ], ], 'OriginEndpoint' => [ 'base' => 'An OriginEndpoint resource configuration.', 'refs' => [ 'ListOfOriginEndpoint$member' => NULL, ], ], 'OriginEndpointCreateParameters' => [ 'base' => 'Configuration parameters for a new OriginEndpoint.', 'refs' => [], ], 'OriginEndpointList' => [ 'base' => 'A collection of OriginEndpoint records.', 'refs' => [], ], 'OriginEndpointUpdateParameters' => [ 'base' => 'Configuration parameters for updating an existing OriginEndpoint.', 'refs' => [], ], 'PlaylistType' => [ 'base' => NULL, 'refs' => [ 'HlsPackage$PlaylistType' => 'The HTTP Live Streaming (HLS) playlist type.When either "EVENT" or "VOD" is specified, a corresponding EXT-X-PLAYLIST-TYPEentry will be included in the media playlist.', ], ], 'Profile' => [ 'base' => NULL, 'refs' => [ 'DashPackage$Profile' => 'The Dynamic Adaptive Streaming over HTTP (DASH) profile type. When set to "HBBTV_1_5", HbbTV 1.5 compliant output is enabled.', ], ], 'SpekeKeyProvider' => [ 'base' => 'A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.', 'refs' => [ 'DashEncryption$SpekeKeyProvider' => NULL, 'HlsEncryption$SpekeKeyProvider' => NULL, 'MssEncryption$SpekeKeyProvider' => NULL, ], ], 'StreamOrder' => [ 'base' => NULL, 'refs' => [ 'StreamSelection$StreamOrder' => 'A directive that determines the order of streams in the output.', ], ], 'StreamSelection' => [ 'base' => 'A StreamSelection configuration.', 'refs' => [ 'DashPackage$StreamSelection' => NULL, 'HlsPackage$StreamSelection' => NULL, 'MssPackage$StreamSelection' => NULL, ], ], '__boolean' => [ 'base' => NULL, 'refs' => [ 'HlsEncryption$RepeatExtXKey' => 'When enabled, the EXT-X-KEY tag will be repeated in output manifests.', 'HlsPackage$IncludeIframeOnlyStream' => 'When enabled, an I-Frame only stream will be included in the output.', 'HlsPackage$UseAudioRenditionGroup' => 'When enabled, audio streams will be placed in rendition groups in the output.', ], ], '__integer' => [ 'base' => NULL, 'refs' => [ 'DashEncryption$KeyRotationIntervalSeconds' => 'Time (in seconds) between each encryption key rotation.', 'DashPackage$ManifestWindowSeconds' => 'Time window (in seconds) contained in each manifest.', 'DashPackage$MinBufferTimeSeconds' => 'Minimum duration (in seconds) that a player will buffer media before starting the presentation.', 'DashPackage$MinUpdatePeriodSeconds' => 'Minimum duration (in seconds) between potential changes to the Dynamic Adaptive Streaming over HTTP (DASH) Media Presentation Description (MPD).', 'DashPackage$SegmentDurationSeconds' => 'Duration (in seconds) of each segment. Actual segments will berounded to the nearest multiple of the source segment duration.', 'DashPackage$SuggestedPresentationDelaySeconds' => 'Duration (in seconds) to delay live content before presentation.', 'HlsEncryption$KeyRotationIntervalSeconds' => 'Interval (in seconds) between each encryption key rotation.', 'HlsPackage$PlaylistWindowSeconds' => 'Time window (in seconds) contained in each parent manifest.', 'HlsPackage$ProgramDateTimeIntervalSeconds' => 'The interval (in seconds) between each EXT-X-PROGRAM-DATE-TIME taginserted into manifests. Additionally, when an interval is specifiedID3Timed Metadata messages will be generated every 5 seconds using theingest time of the content.If the interval is not specified, or set to 0, thenno EXT-X-PROGRAM-DATE-TIME tags will be inserted into manifests and noID3Timed Metadata messages will be generated. Note that irrespectiveof this parameter, if any ID3 Timed Metadata is found in HTTP Live Streaming (HLS) input,it will be passed through to HLS output.', 'HlsPackage$SegmentDurationSeconds' => 'Duration (in seconds) of each fragment. Actual fragments will berounded to the nearest multiple of the source fragment duration.', 'MssPackage$ManifestWindowSeconds' => 'The time window (in seconds) contained in each manifest.', 'MssPackage$SegmentDurationSeconds' => 'The duration (in seconds) of each segment.', 'OriginEndpoint$StartoverWindowSeconds' => 'Maximum duration (seconds) of content to retain for startover playback.If not specified, startover playback will be disabled for the OriginEndpoint.', 'OriginEndpoint$TimeDelaySeconds' => 'Amount of delay (seconds) to enforce on the playback of live content.If not specified, there will be no time delay in effect for the OriginEndpoint.', 'OriginEndpointCreateParameters$StartoverWindowSeconds' => 'Maximum duration (seconds) of content to retain for startover playback.If not specified, startover playback will be disabled for the OriginEndpoint.', 'OriginEndpointCreateParameters$TimeDelaySeconds' => 'Amount of delay (seconds) to enforce on the playback of live content.If not specified, there will be no time delay in effect for the OriginEndpoint.', 'OriginEndpointUpdateParameters$StartoverWindowSeconds' => 'Maximum duration (in seconds) of content to retain for startover playback.If not specified, startover playback will be disabled for the OriginEndpoint.', 'OriginEndpointUpdateParameters$TimeDelaySeconds' => 'Amount of delay (in seconds) to enforce on the playback of live content.If not specified, there will be no time delay in effect for the OriginEndpoint.', 'StreamSelection$MaxVideoBitsPerSecond' => 'The maximum video bitrate (bps) to include in output.', 'StreamSelection$MinVideoBitsPerSecond' => 'The minimum video bitrate (bps) to include in output.', ], ], '__string' => [ 'base' => NULL, 'refs' => [ 'Channel$Arn' => 'The Amazon Resource Name (ARN) assigned to the Channel.', 'Channel$Description' => 'A short text description of the Channel.', 'Channel$Id' => 'The ID of the Channel.', 'ChannelCreateParameters$Description' => 'A short text description of the Channel.', 'ChannelCreateParameters$Id' => 'The ID of the Channel. The ID must be unique within the region and itcannot be changed after a Channel is created.', 'ChannelList$NextToken' => 'A token that can be used to resume pagination from the end of the collection.', 'ChannelUpdateParameters$Description' => 'A short text description of the Channel.', 'HlsEncryption$ConstantInitializationVector' => 'A constant initialization vector for encryption (optional).When not specified the initialization vector will be periodically rotated.', 'IngestEndpoint$Password' => 'The system generated password for ingest authentication.', 'IngestEndpoint$Url' => 'The ingest URL to which the source stream should be sent.', 'IngestEndpoint$Username' => 'The system generated username for ingest authentication.', 'ListOf__string$member' => NULL, 'OriginEndpoint$Arn' => 'The Amazon Resource Name (ARN) assigned to the OriginEndpoint.', 'OriginEndpoint$ChannelId' => 'The ID of the Channel the OriginEndpoint is associated with.', 'OriginEndpoint$Description' => 'A short text description of the OriginEndpoint.', 'OriginEndpoint$Id' => 'The ID of the OriginEndpoint.', 'OriginEndpoint$ManifestName' => 'A short string appended to the end of the OriginEndpoint URL.', 'OriginEndpoint$Url' => 'The URL of the packaged OriginEndpoint for consumption.', 'OriginEndpointCreateParameters$ChannelId' => 'The ID of the Channel that the OriginEndpoint will be associated with.This cannot be changed after the OriginEndpoint is created.', 'OriginEndpointCreateParameters$Description' => 'A short text description of the OriginEndpoint.', 'OriginEndpointCreateParameters$Id' => 'The ID of the OriginEndpoint. The ID must be unique within the regionand it cannot be changed after the OriginEndpoint is created.', 'OriginEndpointCreateParameters$ManifestName' => 'A short string that will be used as the filename of the OriginEndpoint URL (defaults to "index").', 'OriginEndpointList$NextToken' => 'A token that can be used to resume pagination from the end of the collection.', 'OriginEndpointUpdateParameters$Description' => 'A short text description of the OriginEndpoint.', 'OriginEndpointUpdateParameters$ManifestName' => 'A short string that will be appended to the end of the Endpoint URL.', 'SpekeKeyProvider$ResourceId' => 'The resource ID to include in key requests.', 'SpekeKeyProvider$RoleArn' => 'An Amazon Resource Name (ARN) of an IAM role that AWS ElementalMediaPackage will assume when accessing the key provider service.', 'SpekeKeyProvider$Url' => 'The URL of the external key provider service.', ], ], ],];
